{"version":3,"sources":["../src/download.js"],"names":["name","stdout","stderr","json","npmView","console","info","data","error","pkg","eval","j3Config","valid","run","npm_path","cwd","modules_path","err","npmInstall","undefined","log","cmd","args","options","resolve","reject","ls","on","str","toString"],"mappings":";;;;;;;;;;;;;;;AAgBA;;gDACO,WAAqBA,IAArB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AAC9C,YAAIC,OAAO,MAAMC,QAAQJ,IAAR,EAAc,gBAAQ;AACnCK,oBAAQC,IAAR,CAAaC,IAAb;AACH,SAFgB,EAEd,gBAAQ;AACPF,oBAAQG,KAAR,CAAcD,IAAd;AACH,SAJgB,CAAjB;AAKA,YAAIE,MAAMC,KAAK,MAAMP,IAAN,GAAa,GAAlB,CAAV;AACA,YAAI,CAACM,IAAIE,QAAT,EAAmB;AACf,mBAAO,KAAP;AACH;AACD,eAAO,IAAP;AACH,K;;oBAXqBC,K;;;;;AAatB;;;;gDA6BO,WAA0BZ,IAA1B,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgD;AACnD,YAAI;AACA,kBAAMW,IAAI,iBAAOC,QAAX,EAAqB,CAAE,SAAF,EAAad,IAAb,CAArB,EAA0C,EAAEe,KAAK,iBAAOC,YAAd,EAA1C,EAAwEf,MAAxE,EAAgFC,MAAhF,CAAN;AACH,SAFD,CAEE,OAAMe,GAAN,EAAW;AACT,kBAAMA,GAAN;AACH;AACJ,K;;oBANqBC,U;;;;;;gDAQf,WAAuBlB,IAAvB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6C;AAChD,YAAI;AACA,mBAAO,MAAMW,IAAI,iBAAOC,QAAX,EAAqB,CAAE,MAAF,EAAUd,IAAV,CAArB,EAAuCmB,SAAvC,EAAkDlB,MAAlD,EAA0DC,MAA1D,CAAb;AACH,SAFD,CAEE,OAAMe,GAAN,EAAW;AACT,kBAAMA,GAAN;AACH;AACJ,K;;oBANqBb,O;;;;;AA/DtB;;AACA;;;;;;AAEA;AAPA;;;;;+CAQe,WAAgBJ,IAAhB,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsC;AACjD,YAAI,EAAC,MAAMU,MAAMZ,IAAN,EAAYC,MAAZ,EAAoBC,MAApB,CAAP,CAAJ,EAAwC;AACpCG,oBAAQe,GAAR,CAAY,SAAZ;AACA;AACH;AACD,cAAMF,WAAWlB,IAAX,EAAiBC,MAAjB,EAAyBC,MAAzB,CAAN;AACH,K;;;;;;;AAiBD,SAASW,GAAT,CAAaQ,GAAb,EAAkBC,IAAlB,EAAwBC,OAAxB,EAAiCtB,MAAjC,EAAyCC,MAAzC,EAAiD;AAC7C,WAAO,sBAAY,CAACsB,OAAD,EAAUC,MAAV,KAAqB;AACpC,YAAIC,KAAK,0BAAML,GAAN,EAAWC,IAAX,EAAiBC,OAAjB,CAAT;;AAEA,YAAIN,MAAM,EAAV;AAAA,YAAcX,OAAO,EAArB;AACAoB,WAAGzB,MAAH,CAAU0B,EAAV,CAAa,MAAb,EAAqBpB,QAAQ;AACzB,gBAAIqB,MAAMrB,KAAKsB,QAAL,EAAV;AACAvB,oBAAQsB,GAAR;AACA3B,mBAAO2B,GAAP;AACH,SAJD;;AAMAF,WAAGxB,MAAH,CAAUyB,EAAV,CAAa,MAAb,EAAqBpB,QAAQ;AACzB,gBAAIqB,MAAMrB,KAAKsB,QAAL,EAAV;AACAZ,mBAAOW,GAAP;AACA1B,mBAAO0B,GAAP;AACH,SAJD;;AAMAF,WAAGC,EAAH,CAAM,MAAN,EAAc,MAAM;AAChB,gBAAIV,GAAJ,EAAS;AACLQ,uBAAOR,GAAP;AACH,aAFD,MAGK;AACDO,wBAAQlB,IAAR;AACH;AACJ,SAPD;AAQH,KAxBM,CAAP;AAyBH","file":"download.js","sourcesContent":["/*\r\n    用于模块文件及依赖自动下载，使用npm完成，吴丹妮\r\n*/\r\n\r\nimport { spawn } from 'child_process'\r\nimport config from './config'\r\n\r\n// 下载前进行验证，如果确实是j3模块，则下载\r\nexport default async function (name, stdout, stderr) {\r\n    if (!await valid(name, stdout, stderr)) {\r\n        console.log('不是J3模块包')\r\n        return;\r\n    }\r\n    await npmInstall(name, stdout, stderr)\r\n}\r\n\r\n// 验证模块是否符合需求\r\nexport async function valid(name, stdout, stderr) {\r\n    let json = await npmView(name, data => {\r\n        console.info(data)\r\n    }, data => {\r\n        console.error(data)\r\n    })\r\n    let pkg = eval('(' + json + ')')\r\n    if (!pkg.j3Config) {\r\n        return false\r\n    }\r\n    return true\r\n}\r\n\r\n// 执行一个进程，并提供输入及输出。\r\nfunction run(cmd, args, options, stdout, stderr) {\r\n    return new Promise((resolve, reject) => {\r\n        let ls = spawn(cmd, args, options)\r\n\r\n        let err = '', info = ''\r\n        ls.stdout.on('data', data => {\r\n            let str = data.toString()\r\n            info += str\r\n            stdout(str)\r\n        })\r\n\r\n        ls.stderr.on('data', data => {\r\n            let str = data.toString()\r\n            err += str\r\n            stderr(str)\r\n        })\r\n\r\n        ls.on('exit', () => {\r\n            if (err) {\r\n                reject(err)\r\n            }\r\n            else {\r\n                resolve(info)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport async function npmInstall(name, stdout, stderr) {\r\n    try {\r\n        await run(config.npm_path, [ 'install', name ], { cwd: config.modules_path }, stdout, stderr)\r\n    } catch(err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nexport async function npmView(name, stdout, stderr) {\r\n    try {\r\n        return await run(config.npm_path, [ 'view', name ], undefined, stdout, stderr)\r\n    } catch(err) {\r\n        throw err\r\n    }\r\n}\r\n"]}